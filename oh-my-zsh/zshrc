# colors
(cat ~/.cache/wal/sequences)
source ~/.cache/wal/colors.sh

# Path to your oh-my-zsh installation.
export ZSH="${HOME}/.oh-my-zsh"

# ZSH_THEME="zzzeyez"
# p10k
# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
source ~/.oh-my-zsh/custom/plugins/powerlevel10k/powerlevel10k.zsh-theme
source ~/.oh-my-zsh/custom/themes/.p10k.zsh
source ~/.oh-my-zsh/custom/themes/p10k.zsh

# Uncomment the following line if pasting URLs and other text is messed up.
DISABLE_MAGIC_FUNCTIONS=true

# oh-my-zsh
plugins=(git zsh-syntax-highlighting zsh-autosuggestions zsh-very-colorful-manuals)
source $ZSH/oh-my-zsh.sh
source $ZSH/custom/plugins/zsh-git-prompt/zshrc.sh

# fff file manager
f() {
	source ${HOME}/.config/fff
    fff "$@"
    cd "$(cat "${XDG_CACHE_HOME:=${HOME}/.cache}/fff/.fff_d")"
}

# rm to trash
#rm() {
#	rmtrash "$@"
#}

# cd + ls
# autoload -U add-zsh-hook
# add-zsh-hook -Uz chpwd (){ ls -a; }

# exit
;q() {
	exit
}

# nvim
n() {
  nvim "$@"
}

# cd fzf
c() {
  # workaround because canceling commands does `cd ~`
  FZYDIR="$(fd --hidden --type directory --exclude /.cache --exclude /Library --exclude /.thugpro --exclude /.origin . ~ | fzy)"
  cd "$FZYDIR"
}

# todo list
todo() {
	nvim "${HOME}/text/documents/todo"
}

# delete ds store files
ds() {
	find "${1-.}" -name '.DS_Store' -type f -delete
}

# play thugpro
thugpro() {
	export WINEPREFIX=/Users/zzzeyez/.thugpro WINEARCH=win32
	cd /Users/zzzeyez/.thugpro/drive_c/users/zzzeyez/Local\ Settings/Application\ Data/THUG\ Pro &&
	wine ./THUGProLauncher.exe
}

# colorlovers fzy selector
fzycol() {
  fzycol="$(ls ~/.config/wal/colorschemes/colorlovers | fzy)" && colorlovers -nl "$(echo $fzycol | cut -f 1 -d '.')"
}

# search & destroy
fzykill() {
  ps aux | fzy | awk '{ print $2 }' | xargs kill
}

start() {
	skhd & disown
	open -a unshaky
	mopidy & disown 
	exit
}

# iterm2italics fix
#export TERM=xterm-256color-italic

# nvim man page
export MANPAGER='nvim +Man!'

# remove right padding
ZLE_RPROMPT_INDENT=0

export PATH=/opt/homebrew/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin/usr/bin/local:/Users/zzzeyez/scripts/bin:/Users/zzzeyez/.bin:/usr/local/opt/coreutils/libexec/gnubin:/opt/X11/bin

# fixes "command not found python" error
export PATH="$(brew --prefix)/opt/python@3/libexec/bin:$PATH"

test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"

